<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hokage.persistence.mapper.HokageServerMapper">
    <resultMap id="HokageServerMapper" type="HokageServerDO">
        <result property="gmtModified" column="gmt_modified"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="id" column="id"/>
        <result property="description" column="description"/>
        <result property="account" column="account"/>
        <result property="domain" column="domain"/>
        <result property="serverGroup" column="server_group"/>
        <result property="hostname" column="hostname"/>
        <result property="ip" column="ip"/>
        <result property="passwd" column="passwd"/>
        <result property="sshPort" column="ssh_port"/>
        <result property="creatorId" column="creator_id"/>
        <result property="loginType" column="login_type"/>
    </resultMap>

    <sql id="allColumns">
        id,
        gmt_create,
        gmt_modified,
        description,
        account,
        domain,
        server_group,
        hostname,
        ip,
        passwd,
        ssh_port,
        creator_id,
        login_type
    </sql>

    <sql id="tableNme">
        hokage_server
    </sql>

    <sql id="baseSql">
        <where>
            <if test="description != null and description != '' ">
                and description = #{description}
            </if>
            <if test="account != null and account != '' ">
                and account = #{account}
            </if>
            <if test="domain != null and domain != '' ">
                and domain = #{domain}
            </if>
            <if test="serverGroup != null and serverGroup != '' ">
                and server_group = #{serverGroup}
            </if>
            <if test="hostname != null and hostname != '' ">
                and hostname = #{hostname}
            </if>
            <if test="ip != null and ip != '' ">
                and ip = #{ip}
            </if>
            <if test="passwd != null and passwd != '' ">
                and passwd = #{passwd}
            </if>
            <if test="sshPort != null and sshPort != '' ">
                and ssh_port = #{sshPort}
            </if>
            <if test="creatorId != null ">
                and creator_id = #{creatorId}
            </if>
            <if test="loginType != null ">
                and login_type = #{loginType}
            </if>
        </where>
    </sql>

    <sql id="queryBaseSql">
        <if test="hostname != null and hostname != ''">
            and hostname=#{hostname}
        </if>
        <if test="domain != null and domain != ''">
            and domain=#{domain}
        </if>
        <if test="ip != null and ip != ''">
            and ip=#{ip}
        </if>
        <if test="serverGroup != null and serverGroup != ''">
            and server_group LIKE CONCAT('%', #{serverGroup}, '%')
        </if>
    </sql>

    <insert id="insert" parameterType="HokageServerDO">
        INSERT INTO
        <include refid="tableNme"/>
        (
        <include refid="allColumns"/>
        )
        VALUES (
            #{id},
            now(),
            now(),
            #{description},
            #{account},
            #{domain},
            #{serverGroup},
            #{hostname},
            #{ip},
            #{passwd},
            #{sshPort},
            #{creatorId},
            #{loginType}
        );
    </insert>

    <update id="update" parameterType="HokageServerDO">
        UPDATE
        <include refid="tableNme"/>
        <set>
            gmt_modified = now()
            <if test="description != null and description != '' ">
                ,description = #{description}
            </if>
            <if test="account != null and account != '' ">
                ,account = #{account}
            </if>
            <if test="domain != null and domain != '' ">
                ,domain = #{domain}
            </if>
            <if test="serverGroup != null and serverGroup != '' ">
                ,server_group = #{serverGroup}
            </if>
            <if test="hostname != null and hostname != '' ">
                ,hostname = #{hostname}
            </if>
            <if test="ip != null and ip != '' ">
                ,ip = #{ip}
            </if>
            <if test="passwd != null and passwd != '' ">
                ,passwd = #{passwd}
            </if>
            <if test="sshPort != null and sshPort != '' ">
                ,ssh_port = #{sshPort}
            </if>
            <if test="loginType != null ">
                ,login_type = #{loginType}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <select id="selectAll" resultMap="HokageServerMapper">
        SELECT
        <include refid="allColumns"/>
        FROM
        <include refid="tableNme"/>
    </select>

    <select id="selectByIds" parameterType="java.util.List" resultMap="HokageServerMapper">
        SELECT
        <include refid="allColumns"/>
        FROM
        <include refid="tableNme"/>
        <where>
            id IN
            <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </select>

    <select id="selectById" parameterType="java.lang.Long" resultMap="HokageServerMapper">
        SELECT
        <include refid="allColumns"/>
        FROM
        <include refid="tableNme"/>
        <where>
            id=#{id}
        </where>
    </select>

    <select id="selectByGroup" parameterType="java.lang.String" resultMap="HokageServerMapper">
        SELECT
        <include refid="allColumns"/>
        FROM
        <include refid="tableNme"/>
        <where>
            server_group=#{group}
        </where>
    </select>

    <select id="selectBySupervisorId" parameterType="java.lang.Long" resultMap="HokageServerMapper">
        SELECT
            <include refid="allColumns" />
        FROM
            <include refid="tableNme"/>
        <where>
            id IN (
                SELECT server_id FROM hokage_supervisor_server WHERE supervisor_id = #{supervisorId}
            )
        </where>
    </select>

    <select id="selectByAllServerQuery" parameterType="com.hokage.biz.request.AllServerQuery" resultMap="HokageServerMapper">
        SELECT <include refid="allColumns"/>
        FROM <include refid="tableNme"/>
        <where>
            <include refid="queryBaseSql" />
            <if test="supervisor != null">
                and id IN (
                    SELECT server_id FROM hokage_supervisor_server WHERE supervisor_id IN (
                        SELECT id FROM hokage_user WHERE `username` LIKE CONCAT('%', #{supervisor}, '%')
                    )
                )
            </if>
        </where>
    </select>

    <select id="selectBySupervisorServerQuery" parameterType="com.hokage.biz.request.SupervisorServerQuery" resultMap="HokageServerMapper">
        SELECT <include refid="allColumns" />
        FROM <include refid="tableNme" />
        <where>
            id IN (
                SELECT server_id FROM hokage_supervisor_server WHERE supervisor_id = #{operatorId}
            )
            <include refid="queryBaseSql" />
            <if test="account != null and account != ''">
                and account LIKE CONCAT('%', account, '%')
            </if>

            <if test="username != null">
                and id IN (
                    SELECT server_id FROM hokage_subordinate_server WHERE subordinate_id IN (
                        SELECT id FROM hokage_user WHERE `username` LIKE CONCAT('%', #{username}, '%')
                    )
                )
            </if>



        </where>
    </select>

    <select id="selectBySubordinateServerQuery" parameterType="com.hokage.biz.request.SubordinateServerQuery" resultMap="HokageServerMapper">
        SELECT <include refid="allColumns" />
        FROM <include refid="tableNme" />
        <where>
            id IN (
                SELECT server_id FROM hokage_subordinate_server WHERE subordinate_id = #{operatorId}
            )
            <include refid="queryBaseSql" />
            <if test="account != null and account != ''">
                AND account LIKE CONCAT('%', account,'%')
            </if>

            <if test="username != null and username != ''">
                AND id IN (
                    SELECT server_id FROM hokage_subordinate_server WHERE subordinate_id IN (
                        SELECT id FROM hokage_user WHERE `username` LIKE CONCAT('%', #{username}, '%')
                    )
                )
            </if>
        </where>
    </select>
</mapper>